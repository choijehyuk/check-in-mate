<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ssafy.enjoytrip.board.model.mapper.BoardMapper">

	<resultMap type="boardDto" id="article">
		<result column="join_mate_article_no" property="articleNo"/>
		<result column="join_mate_user_id" property="userId"/>
		<result column="user_name" property="userName"/>
		<result column="join_mate_title" property="title"/>
		<result column="join_mate_content" property="content"/>
		<result column="join_mate_hit" property="hit"/>
		<result column="register_time" property="registerTime"/>
	</resultMap>
	
	<resultMap type="boardDto" id="viewArticle" extends="article">
<!-- 	<collection property="fileInfos" column="article_no" javaType="list" ofType="fileInfoDto" select="fileInfoList"/> -->
	</resultMap>
<!-- 	
	<resultMap type="fileInfoDto" id="file">
		<result column="save_folder" property="saveFolder"/>
		<result column="original_file" property="originalFile"/>
		<result column="save_file" property="saveFile"/>
	</resultMap>
-->
	<insert id="writeArticle" parameterType="boardDto">
		insert into join_mate (join_mate_user_id, join_mate_title, join_mate_content, join_mate_hit, register_time)
		values (#{userId}, #{title}, #{content}, 0, now())
		<selectKey resultType="int" keyProperty="articleNo" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
<!-- 	
	<insert id="registerFile" parameterType="boardDto">
		insert into file_info (article_no, save_folder, original_file, save_file)
		values
		<foreach collection="fileInfos" item="fileinfo" separator=" , ">
			(#{articleNo}, #{fileinfo.saveFolder}, #{fileinfo.originalFile}, #{fileinfo.saveFile})
		</foreach>
	</insert>
-->
	<sql id="search">
		<if test="word != null and word != ''">
			<if test="key == 'title'">
				and title like concat('%', #{word}, '%')
			</if>
			<if test="key != 'title'">
				and ${key} = #{word}
			</if>
		</if>
	</sql>

	<select id="listArticle" parameterType="map" resultMap="article">

 		select jm.join_mate_article_no, jm.join_mate_user_id, jm.join_mate_title, jm.join_mate_content, jm.join_mate_hit, jm.register_time, m.user_name
		from join_mate jm, member m 
		where jm.join_mate_user_id = m.user_id
 		<include refid="search"></include>
		order by jm.join_mate_article_no desc
		limit #{start}, #{listsize} 
	</select>
	 
	<select id="getTotalArticleCount" parameterType="map" resultType="int">
		select count(join_mate_article_no)
		from join_mate
		<where>
			<include refid="search"></include>
		</where>
	</select>
	
	<select id="getArticle" parameterType="int" resultMap="viewArticle">
		select jm.join_mate_article_no, jm.join_mate_user_id, jm.join_mate_title, jm.join_mate_content, jm.join_mate_hit, jm.register_time, m.user_name 
		from join_mate jm, member m
		where jm.join_mate_user_id = m.user_id
		and jm.join_mate_article_no = #{articleNo}
	</select>
	<!-- 
	<select id="fileInfoList" resultMap="file">
		select save_folder, original_file, save_file
		from file_info
		where article_no = #{articleNo}
	</select>
	-->
	<update id="updateHit" parameterType="int">
		update join_mate
		set join_mate_hit = join_mate_hit + 1
		where join_mate_article_no = #{articleNo}
	</update>

	<update id="modifyArticle" parameterType="boardDto">
		update join_mate
		set join_mate_title = #{title}, join_mate_content = #{content}
		where join_mate_article_no = #{articleNo}
	</update>
	<!-- 
	<delete id="deleteFile" parameterType="int">
		delete from file_info
		where article_no = #{articleNo}
	</delete>
	-->
	<delete id="deleteArticle" parameterType="int">
		delete from join_mate
		where join_mate_article_no = #{articleNo}
	</delete> 
	
	<resultMap type = "commentDto" id= "commentMap">
		<result column="comment_comment_no" property="commentNo"/>
		<result column="comment_article_no" property="articleNo"/>
		<result column="comment_user_id" property="userId"/>
		<result column="parent_id" property="parentId"/>
		<result column="comment_content" property="content"/>
		<result column="register_time" property="registerTime"/>
	</resultMap>	

	<insert id="insertComment" parameterType="commentDto">
		insert into join_mate_comment (
			comment_article_no,
			comment_user_id,
			comment_content,
			register_time
		) values (#{articleNo}, #{userId}, #{content}, now())
	</insert>
	
	<select id="listComment" parameterType="int" resultMap="commentMap">
		select comment_no, comment_article_no, comment_user_id, comment_content, register_time
		from join_mate_comment
		where comment_article_no = #{articleNo}
		order by register_time
	</select>
	
	<delete id="deleteComment" parameterType="int">
		delete from join_mate_comment where comment_no = #{commentNo}
	</delete>
	
</mapper>	
	